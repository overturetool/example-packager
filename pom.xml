<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Needed to make deployment work -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <packaging>pom</packaging>

  <groupId>org.overturetool.build</groupId>
  <artifactId>root</artifactId>
  <version>3.0.2</version>
  <name>Overture Example Packager superpom</name>
  <description>A maven plugin to bundle up the VDM examples in the Overture Project's main repository</description>
  <url>http://overturetool.org/example-packager/</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Add JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <!--
            This plugin allows you to run

            $ mvn versions:set -DnewVersion=2.0.2

            and get all the maven version numbers updated nearly for
            free.  The tycho bit on the end just tells tycho (used in
            the eclipse plugin build) to piss off.

            Don't forget to update all of the MANFEST.MF, feature.xml,
            and symphony.product version numbers as well.  See
            tools/build/update-versions.sh.

            More details on the versions-maven-plugin are at
            http://mojo.codehaus.org/versions-maven-plugin/
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <!-- Version control obviates the need for this. -->
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
    </plugins>

    <!-- Configuration of plugins for inheriting pom.xml files should
         be in the pluginManagement tag
    -->
    <pluginManagement>
      <plugins>
        <!-- Configure the compiler for all Overture Projects -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>

        <!-- Attatch sources to all installed jars -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
          <!-- <executions> -->
          <!--   <execution> -->
          <!--     <id>attach-sources</id> -->
          <!--     <goals> -->
          <!--       <goal>jar</goal> -->
          <!--     </goals> -->
          <!--   </execution> -->
          <!-- </executions> -->
          <configuration>
            <attach>true</attach>
          </configuration>
        </plugin>

        <!-- Enable JavaDoc but dont fail on error. This must be disabled for
             the Eclipse project in the IDE -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <failOnError>false</failOnError>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.13</version>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
	    <!-- required for java7 to avoid verifier errors-->
	    <argLine>-XX:-UseSplitVerifier -Djava.awt.headless=true</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.2</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.1</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>core</module>
        <module>plugin</module>
      </modules>
    </profile>
  </profiles>


  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/overturetool/example-packager/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>GNU General Public License (GPL)</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
    </license>
  </licenses>

  <scm>
    <url>git@github.com/overturetool/example-packager.git</url>
    <connection>scm:git:https://github.com/overturetool/example-packager.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/overturetool/example-packager.git</developerConnection>
    <tag>v3.0.2</tag>
  </scm>

  <developers>
    <developer>
      <id>kel</id>
      <name>Kenneth Lausdahl</name>
      <email>lausdahl@eng.au.dk</email>
      <organization>Aarhus University</organization>
      <organizationUrl>http://eng.au.dk/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>jwc</id>
      <name>Joey Coleman</name>
      <email>jwc@eng.au.dk</email>
      <organization>Aarhus University</organization>
      <organizationUrl>http://eng.au.dk/</organizationUrl>
      <roles>
        <role>coordinator</role>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <organization>
    <name>Overture</name>
    <url>http://www.overturetool.org</url>
  </organization>
</project>
